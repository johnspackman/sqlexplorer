<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="net.sourceforge.sqlexplorer">
<annotation>
      <appInfo>
         <meta.schema plugin="net.sourceforge.sqlexplorer" id="nodeDetailTab" name="Database Structure Node Detail Tab"/>
      </appInfo>
      <documentation>
         This extension points allows you to add custom detail tabs for nodes in the database structure view.  There are 2 ways to specify when your tab should be available for a node: by specifiying the database product name and by specifying the node type.
      </documentation>
   </annotation>

   <element name="detailtab">
      <annotation>
         <documentation>
            This extension points allows you to add custom detail tabs for specific nodes in the database strucuture view.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Name of the extension tab.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  Identifier of the extension tab.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  A fully qualified name of a class which extends &lt;samp&gt;net.sourceforge.sqlexplorer.dbdetail.tab.AbstractTab&lt;/samp&gt;
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="net.sourceforge.sqlexplorer.dbdetail.tab.AbstractTab"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="database-product-name" type="string" use="required">
            <annotation>
               <documentation>
                  Name of database for which this tab is valid as seen in the Database Product Name property in the Connection Info view.  &apos;*&apos; can be used as a wildcard.  Use a comma seperated list to specify multiple databases.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="node-type" type="string" use="required">
            <annotation>
               <documentation>
                  Target node type for this tab.  Valid target types include:&lt;br&gt;
&lt;samp&gt;*&lt;/samp&gt; - tab will be available for all nodes&lt;br&gt;
&lt;samp&gt;catalog&lt;/samp&gt; - tab will be available for catalog node&lt;br&gt;
&lt;samp&gt;schema&lt;/samp&gt; - tab will be available for schema node&lt;br&gt;
&lt;samp&gt;xxx_group&lt;/samp&gt; - tab will be available for object type nodes of types xxx.  The xxx prefix should be replace by a valid supported database table type (e.g. view, local temporary, table, ...)&lt;br&gt;
&lt;samp&gt;table&lt;/samp&gt; - tab will be available for table nodes&lt;br&gt;
Use a comma seperated list to specifiy multiple types.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="extension">
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="detailtab"/>
         </sequence>
         <attribute name="point" type="string">
            <annotation>
               <documentation>
                  A fully qualified identifier of the target extension point.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  An optional identifier of the extension instance.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  An optional name of the extension instance.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         version 3.0.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         // TODO
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         None.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         There are 2 classes that you can extend to implement a new detail tab: net.sourceforge.sqlexplorer.dbdetail.tab.AbstractTab and  net.sourceforge.sqlexplorer.dbdetail.tab.AbstractDataSetTab.

If you want to have a completely custom tab and fill it yourself, extend the AbstractTab.  If you want to display a grid of information (like all the existing detail tabs, extend the AbstractDataSetTab and implement the getDataSet() method.  You can create a new DataSet using a resultSet, sql query or string[][].
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         (c) Davy Vanherbergen, 2006, All rights reserved.
      </documentation>
   </annotation>

</schema>
